template:
  - sensor:
      - unique_id: sidebar
        state: template
        attributes:
          time: >
            {% set hours = now().strftime('%H') %}
            {% set minutes = now().strftime('%M') %}
            <span class="time">
              {{ hours }}<span class="time-colon">:</span>{{ minutes }}
            </span>
          date: >
            <font color='#6a7377'><b>
            {% if strptime(states('sensor.date'), '%Y-%m-%d').day != null %}
            {% set days = ['Maandag', 'Dinsdag', 'Woensdag', 'Donderdag', 'Vrijdag', 'Zaterdag', 'Zondag'] %}
            {% set months = ['Januari', 'Februari', 'Maart', 'April', 'Mei', 'Juni',
            'Juli', 'Augustus', 'September', 'Oktober', 'November', 'December'] %}
              {{ days[now().weekday()] }}<br>
              {{ strptime(states('sensor.date'), '%Y-%m-%d').day }} {{ months[now().month-1] }}
            {% endif %}
            </b></font>
          greet: >
            <b>
            {% set time = now().hour %}
            {% if time <= 1 %} Goedenacht {{'\U0001F611'}}
            {% elif time <= 3 %} Goedenacht {{'\U0001F62A'}}
            {% elif time <= 5 %} Goedenacht {{'\U0001F634'}}
            {% elif time <= 7 %} Goedemorgen {{'\U0001F4A9'}}
            {% elif time <= 9 %} Goedemorgen {{'\u2615\uFE0F'}}
            {% elif time <= 10 %} Goedemorgen {{'\U0001F642'}}
            {% elif time <= 13 %} Goededag {{'\U0001F60A'}}
            {% elif time <= 15 %} Goededag {{'\U0001F60E'}}
            {% elif time <= 17 %} Goededag {{'\U0001F44B\U0001F3FB'}}
            {% elif time <= 19 %} Goedenavond {{'\U0001F44B\U0001F3FB'}}
            {% elif time <= 22 %} Goedenavond {{'\U0001F60C'}}
            {% elif time <= 23 %} Goedenavond {{'\U0001F974'}}
            {% else %} Goedenavond {{'\U0001F974'}}
            {% endif %}
            </b>
          # active: >
          #   <b>
          #   {% set lights = [
          #     states.light.tv,
          #     states.light.golv,
          #     states.light.horna,
          #     states.light.dator,
          #     states.light.vask_hoger,
          #     states.light.vask_vanster,
          #     states.light.byra,
          #     states.light.garderob,
          #     states.light.hall_1,
          #     states.light.hall_2,
          #     states.light.hall_3,
          #     states.light.mattias,
          #     states.light.sanja,
          #     states.light.spot_1,
          #     states.light.spot_2,
          #     states.switch.deltaco_sh_p01
          #   ] %}

          #   {% set switches = [
          #     states.switch.computer_imac,
          #     states.switch.playstation_5,
          #     states.switch.gosund_monitors_switch,
          #     states.fan.studio,
          #     states.media_player.samsung_tv
          #   ] %}

          #   {% set media_players = [
          #     states.media_player.sony_bravia_tv
          #   ] %}

          #   {% set lights_on = lights | selectattr('state','eq','on') | list %}
          #   {% set lights_name = lights | selectattr('state','eq','on') | map(attribute='name') | join(', ') %}

          #   {% set switches_on = switches | selectattr('state','eq','on') | list %}
          #   {% set media_players_playing = media_players | selectattr('state','eq','playing') | list %}
          #   {% set append = switches_on + media_players_playing %}
          #   {% set switches_name = append | map(attribute='name') | join(', ') %}

          #   {% if (lights_on | length == 0) and (switches_on | length > 0) %}
          #     {{ switches_name | regex_replace(',([^,]*)$',' och\\1') }} är på

          #   {% elif (lights_on | length == 1) and (switches_on | length == 1) %}
          #     {{ lights_name }} och {{switches_name }} är på

          #   {% elif (lights_on | length == 1) and (switches_on | length > 1) %}
          #     {{ lights_name }}, {{ switches_name | regex_replace(',([^,]*)$',' och\\1') }} är på

          #   {% elif (lights_on | length > 1) and (switches_on | length == 1) %}
          #     {{ lights_on | length }} lampor och {{ switches_name }} är på

          #   {% elif (lights_on | length > 1) and (switches_on | length > 1) %}
          #     {{ lights_on | length }} lampor, {{ switches_name | regex_replace(',([^,]*)$',' och\\1') }} är på

          #   {% elif (lights_on | length == 1) and (switches_on | length == 0) %}
          #     {{ lights_name }} är på

          #   {% elif (lights_on | length > 1) and (switches_on | length == 0) %}
          #     {{ lights_on | length }} lampor är på

          #   {% else %}
          #     <font color='#6a7377'>Allt är avstängt</font>
          #   {% endif %}
          #   </b>
          # mailbox: >
          #   {% set mailbox = states('sensor.mailbox') %}
          #   {% if mailbox | int(default=0) > 0 %}
          #     {{ '\U0001F4EC' }} <font color='#6a7377'><b>Brevlåda ({{ mailbox }})</b></font>
          #   {% endif %}
          # vacuum: >
          #   {% set entity_id = 'vacuum.morty' %}
          #   {% if is_state(entity_id, 'cleaning') %}
          #     <b>Morty dammsuger</b>
          #   {% elif is_state(entity_id, 'returning') %}
          #     <b>Morty är färdig</b>
          #   {% endif %}
          # weather: >
          #   {% set temperature = states('sensor.dark_sky_temperature') %}
          #   {% set apparent = states('sensor.dark_sky_apparent_temperature') | round %}
          #   {% set precip = states('sensor.dark_sky_precip_probability') | round %}
          #   {% if not is_state('sensor.dark_sky_temperature', 'unknown') %}
          #     {% if temperature | float(default=0) <= 0.0 %}
          #       Känns som {{ apparent }}° med {{ precip }}% risk för snö {{'\u2744\uFE0F'}}
          #     {% elif temperature | float(default=0) > 0.0 %}
          #       Känns som {{ apparent}}° med {{ precip }}% risk för regn {{ '\u2614\uFE0F' if precip > 30 }}
          #     {% endif %}
          #   {% else %}
          #     Kan inte läsa in väderinformation...
          #   {% endif %}
          # transport: >
          #   {{ states('sensor.skanetrafiken') }}
          # laundry: >
          #   {% set start_time = state_attr('calendar.tvatta', 'start_time') %}
          #   {% if start_time != None %}
          #     {% set time = as_timestamp(start_time) | timestamp_custom('%H:%M') %}
          #     {% set hours = as_timestamp(start_time) | timestamp_custom('%H') | int(default=0) / 24 %}
          #     {% set count = (as_timestamp(start_time) - as_timestamp(now())) / 86400 - hours %}
          #     {% set day = strptime(start_time, '%Y-%m-%d %H:%M:%S').strftime('%A')
          #     | replace('Monday', 'Måndag')
          #     | replace('Tuesday', 'Tisdag')
          #     | replace('Wednesday', 'Onsdag')
          #     | replace('Thursday', 'Torsdag')
          #     | replace('Friday', 'Fredag')
          #     | replace('Saturday', 'Lördag')
          #     | replace('Sunday', 'Söndag') %}
          #     {% if count <= 0.0 %}
          #       {{'\U0001F4A6'}} Tvätt idag {{ time }}
          #     {% elif count <= 1.0 %}
          #       Tvätt imorgon klockan {{ time }}
          #     {% elif count <= 2.0 %}
          #       Tvätt i övermorgon klockan {{ time }}
          #     {% else %}
          #       Tvätt om {{ (count + hours) | round }} dagar på {{ day }} kl {{ time }}
          #     {% endif %}
          #   {% endif %}
          # battery: >
          #   {% set entities = states.sensor
          #     | selectattr('entity_id', 'search', 'battery')
          #     | rejectattr('entity_id', 'search', 'iphone')
          #     | map(attribute = 'entity_id') | list %}
          #   {% for sensor in entities if states(sensor) != 'unknown' and states(sensor) !=
          #   'unavailable' and states(sensor) != 'None' and states(sensor) | int(default=0) <= 5 %}
          #     {% if loop.first %} {{'\u26A0\uFE0F'}} Batteri {% else %}, {% endif %}
          #     {{ state_attr(sensor, 'friendly_name') }} {{ states(sensor) }}%
          #   {% endfor %}
          # nas: >
          #   {% if is_state('binary_sensor.nas_internet_access', 'off') %}
          #     {{'\u26A0\uFE0F'}} Kontrollera NAS internetåtkomst
          #   {% endif %}
