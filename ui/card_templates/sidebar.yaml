sidebar:
  show_state: false
  show_icon: false
  tap_action:
    action: none
  name: |
    [[[
      if (entity) {
        let myAttributes = [];
        for (let [k, value] of Object.entries(entity.attributes)) {
          value !== false && (myAttributes += `<p>${value}</p>`);
        }
        return myAttributes;
      }
    ]]]
  extra_styles: |
    #card {
      padding: 0;
    }
    #container {
      display: flex !important;
    }
    #name {
      padding: 1.8vw 2.5vw 0 3.3vw;
      white-space: normal;
      text-align: left;
    }
    .time {
      font-family: SF Text, Roboto;
      font-size: 5vw;
      font-weight: 200;
      line-height: 4vw;
      letter-spacing: -0.05vw;
      margin-left: -0.3vw;
      color: rgba(255, 255, 255, 0.8);
    }
    .time-colon {
      position: relative;
      top: -.09em;
    }
    p {
      font-family: SF Display, Roboto;
      font-size: 1.5vw;
      line-height: 2.1vw;
      letter-spacing: 0.06vw;
      color: #6a7377;
    }
    p > b {
      color: rgba(255, 255, 255, 0.8);
    }
    @media screen and (max-width: 1200px) {
      .time {
        font-size: calc(5vw * 1.4 );
        line-height: calc(var(4vw) * 1.4 );
      }
      p {
        font-size: calc(var(1.5vw) * 1.4 );
        line-height: calc(var(2.1vw) * 1.4 );
      }
    }
    @media screen and (max-width: 800px) {
      .time {
        font-size: calc(var(5vw) * 2.6 );
      }
      p {
        font-size: calc(var(1.5vw) * 2.6 );
        line-height: calc(var(2.1vw) * 2.6 );
        letter-spacing: 0.16vw;
      }
      #name {
        padding: 0 0 0 1vw;
      }
    }
